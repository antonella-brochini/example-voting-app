name: CI with SonarCloud and Docker Build

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  sonarcloud:
    name: Analyze All Services
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Setup Java (requerido por SonarScanner)
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Setup Python para vote/
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Setup Node.js para result/
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Setup .NET para worker/
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      # Install SonarScanner
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: sonarcloud

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build vote service (Python)
        run: docker build -t vote-service ./vote

      - name: Build result service (Node.js)
        run: docker build -t result-service ./result

      - name: Set up .NET for worker
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Build worker service (C#)
        run: docker build -t worker-service ./worker

  test-compose:
    name: Test Docker Compose and seed data
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Docker Compose
        uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: '2.14.2'

      - name: Verificar versi√≥n
        run: docker-compose version

      - name: Build and run with Docker Compose
        run: |
          docker compose up --build -d
          sleep 10  # tiempo para que los servicios inicien

      - name: Test if services are healthy
        run: |
          docker compose ps
          docker compose logs
          curl --fail http://localhost:8080 || (echo "Vote service not responding" && exit 1)
          curl --fail http://localhost:8081 || (echo "Result service not responding" && exit 1)
          
      - name: Shut down services
        run: docker compose down

      - name: Levantar servicios para prueba seed 
        run: docker compose up -d --build

      - name: Seed database with votes
        run: docker compose --profile seed up --abort-on-container-exit

      - name: Esperar para que todo quede estable
        run: sleep 10

     - name: Ver votos en la base de datos
       run: |
         docker exec example-voting-app-db-1 psql -U postgres -d postgres -c "SELECT vote, COUNT(*) FROM votes GROUP BY vote;"

      - name: Apagar servicios
        run: docker compose down
    

